(()=>{"use strict";var __webpack_modules__={"./src/js/api/index.js":
/*!*****************************!*\
  !*** ./src/js/api/index.js ***!
  \*****************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendForm: () => (/* binding */ sendForm)\n/* harmony export */ });\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nvar sendForm = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var name, email, message, body;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          name = _ref.name, email = _ref.email, message = _ref.message;\n          _context.next = 3;\n          return fetch(\'https://dummyjson.com/users/add\', {\n            method: \'POST\',\n            headers: {\n              \'Content-Type\': \'application/json\'\n            },\n            body: JSON.stringify({\n              username: name,\n              email: email,\n              message: message\n            })\n          });\n        case 3:\n          body = _context.sent;\n          return _context.abrupt("return", body.json());\n        case 5:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function sendForm(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n//# sourceURL=webpack://digital-element/./src/js/api/index.js?')},"./src/js/form/form.js":
/*!*****************************!*\
  !*** ./src/js/form/form.js ***!
  \*****************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Form: () => (/* binding */ Form)\n/* harmony export */ });\n/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validator */ "./src/js/form/validator.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\nvar Form = /*#__PURE__*/function () {\n  function Form(_ref) {\n    var formId = _ref.formId,\n      _ref$fields = _ref.fields,\n      fields = _ref$fields === void 0 ? [] : _ref$fields,\n      onSubmit = _ref.onSubmit;\n    _classCallCheck(this, Form);\n    this.form = document.getElementById(formId);\n    this.fields = fields;\n    this.onSubmit = onSubmit;\n    this.isValid = false;\n    this.fieldsElements = [];\n    this.payload = {};\n    this.events();\n  }\n  _createClass(Form, [{\n    key: "events",\n    value: function events() {\n      var _this = this;\n      if (!this.form) {\n        throw new Error(\'Не удалось получить элемент form\');\n      }\n      if (!this.fields.length || !!this.fields.filter(function (field) {\n        return !field.name || typeof field.name !== \'string\' || field.validator !== null && Object.getPrototypeOf(field.validator) !== _validator__WEBPACK_IMPORTED_MODULE_0__.Validator.prototype;\n      }).length) {\n        throw new Error(\'Массив с полями формы не должен быть пустым и объект в массиве должен содержать следующую структуру: {name: "string", validator: Validator | null}\');\n      }\n      if (!this.onSubmit || typeof this.onSubmit !== \'function\') {\n        throw new Error(\'Не передана функция onSubmit или onSubmit не является функцией\');\n      }\n      this.fieldsElements = this.fields.map(function (field) {\n        if (!_this.form[field.name]) {\n          throw new Error("\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u043D\\u0430\\u0439\\u0442\\u0438 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442 \\u0444\\u043E\\u0440\\u043C\\u044B \\u0441\\u043E \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0430\\u0442\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 name: ".concat(field.name));\n        }\n        _this.form[field.name].addEventListener(\'blur\', function (e) {\n          return _this.validate.call(_this, e.target, field.validator);\n        });\n        _this.form[field.name].addEventListener(\'input\', _this.resetValidation.bind(_this));\n        return _this.form[field.name];\n      });\n      this.form.addEventListener(\'submit\', this.submit.bind(this));\n    }\n  }, {\n    key: "submit",\n    value: function submit(e) {\n      var _this2 = this;\n      e.preventDefault();\n      var i = 0;\n      var _loop = function _loop() {\n        var fieldElement = _this2.fieldsElements[i];\n        var _this2$fields$find = _this2.fields.find(function (filed) {\n            return filed.name === fieldElement.name;\n          }),\n          validator = _this2$fields$find.validator;\n        if (!_this2.validate(fieldElement, validator)) {\n          fieldElement.focus();\n        }\n        i += 1;\n      };\n      while (this.isValid && this.fieldsElements.length > i) {\n        _loop();\n      }\n      if (this.isValid) {\n        this.payload = this.fieldsElements.reduce(function (acc, field) {\n          acc[field.name] = field.value;\n          return acc;\n        }, {});\n        this.onSubmit(this.payload);\n      }\n    }\n  }, {\n    key: "validate",\n    value: function validate(element, validator) {\n      var value = element.value.trim();\n      var res = validator && validator.validate(value);\n      if (res) {\n        // eslint-disable-next-line no-param-reassign\n        element.parentNode.dataset.error = res;\n        element.focus();\n      }\n      this.isValid = !res;\n      return !res;\n    }\n  }, {\n    key: "resetValidation",\n    value: function resetValidation(e) {\n      var element = e.target;\n      element.parentNode.removeAttribute(\'data-error\');\n    }\n  }, {\n    key: "clear",\n    value: function clear() {\n      this.fieldsElements.forEach(function (element) {\n        // eslint-disable-next-line no-param-reassign\n        element.value = \'\';\n      });\n    }\n  }]);\n  return Form;\n}();\n\n//# sourceURL=webpack://digital-element/./src/js/form/form.js?')},"./src/js/form/helpers.js":
/*!********************************!*\
  !*** ./src/js/form/helpers.js ***!
  \********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_VALIDATOR: () => (/* binding */ DEFAULT_VALIDATOR),\n/* harmony export */   minLength: () => (/* binding */ minLength),\n/* harmony export */   required: () => (/* binding */ required),\n/* harmony export */   stringOnly: () => (/* binding */ stringOnly),\n/* harmony export */   validateEmail: () => (/* binding */ validateEmail)\n/* harmony export */ });\nvar DEFAULT_VALIDATOR = function DEFAULT_VALIDATOR(_ref) {\n  var value = _ref.value,\n    rules = _ref.rules;\n  var validationResult = null;\n  var i = 0;\n  while (validationResult === null && i < rules.length) {\n    var res = rules[i](value);\n    if (res) {\n      validationResult = res;\n    }\n    i += 1;\n  }\n  return validationResult;\n};\nvar required = function required() {\n  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Obligatory field';\n  return function (value) {\n    return value ? null : message;\n  };\n};\nvar minLength = function minLength(length) {\n  var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"The value cannot be less: \".concat(length);\n  return function (value) {\n    return value.length >= length ? null : message;\n  };\n};\nvar validateEmail = function validateEmail() {\n  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Please enter a valid email';\n  return function (value) {\n    return /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/.test(value) ? null : message;\n  };\n};\nvar stringOnly = function stringOnly() {\n  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Latin and Cyrillic characters are allowed';\n  return function (value) {\n    return /(?:(?![ `-z\\u017F\\u0430-\\u044F\\u0451\\u212A\\uD800-\\uDFFF])[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/i.test(value) ? message : null;\n  };\n};\n\n//# sourceURL=webpack://digital-element/./src/js/form/helpers.js?")},"./src/js/form/index.js":
/*!******************************!*\
  !*** ./src/js/form/index.js ***!
  \******************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_VALIDATOR: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_VALIDATOR),\n/* harmony export */   Form: () => (/* reexport safe */ _form__WEBPACK_IMPORTED_MODULE_0__.Form),\n/* harmony export */   Validator: () => (/* reexport safe */ _validator__WEBPACK_IMPORTED_MODULE_1__.Validator),\n/* harmony export */   minLength: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_2__.minLength),\n/* harmony export */   required: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_2__.required),\n/* harmony export */   stringOnly: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_2__.stringOnly),\n/* harmony export */   validateEmail: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_2__.validateEmail)\n/* harmony export */ });\n/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form */ "./src/js/form/form.js");\n/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validator */ "./src/js/form/validator.js");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers */ "./src/js/form/helpers.js");\n\n\n\n\n//# sourceURL=webpack://digital-element/./src/js/form/index.js?')},"./src/js/form/validator.js":
/*!**********************************!*\
  !*** ./src/js/form/validator.js ***!
  \**********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Validator: () => (/* binding */ Validator)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ "./src/js/form/helpers.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\nvar Validator = /*#__PURE__*/function () {\n  function Validator(_ref) {\n    var _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? [] : _ref$rules,\n      _ref$validator = _ref.validator,\n      validator = _ref$validator === void 0 ? _helpers__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_VALIDATOR : _ref$validator;\n    _classCallCheck(this, Validator);\n    this.rules = rules;\n    this.validator = validator;\n  }\n  _createClass(Validator, [{\n    key: "validate",\n    value: function validate(value) {\n      return this.validator({\n        value: value,\n        rules: this.rules\n      });\n    }\n  }]);\n  return Validator;\n}();\n\n//# sourceURL=webpack://digital-element/./src/js/form/validator.js?')},"./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ "./src/js/api/index.js");\n/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form */ "./src/js/form/index.js");\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal */ "./src/js/modal.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\nvar modalForm = new _modal__WEBPACK_IMPORTED_MODULE_2__.Modal({\n  modalId: \'modal-form\',\n  btnOpenId: \'modalButtonOpen\'\n});\nvar modalPopup = new _modal__WEBPACK_IMPORTED_MODULE_2__.Modal({\n  modalId: \'modal-popup\'\n});\nvar form = new _form__WEBPACK_IMPORTED_MODULE_1__.Form({\n  formId: \'form\',\n  fields: [{\n    name: \'name\',\n    validator: new _form__WEBPACK_IMPORTED_MODULE_1__.Validator({\n      rules: [(0,_form__WEBPACK_IMPORTED_MODULE_1__.required)(), (0,_form__WEBPACK_IMPORTED_MODULE_1__.stringOnly)(), (0,_form__WEBPACK_IMPORTED_MODULE_1__.minLength)(2)]\n    })\n  }, {\n    name: \'email\',\n    validator: new _form__WEBPACK_IMPORTED_MODULE_1__.Validator({\n      rules: [(0,_form__WEBPACK_IMPORTED_MODULE_1__.required)(), (0,_form__WEBPACK_IMPORTED_MODULE_1__.validateEmail)()]\n    })\n  }, {\n    name: \'message\',\n    validator: null\n  }],\n  onSubmit: function () {\n    var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(payload) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return (0,_api__WEBPACK_IMPORTED_MODULE_0__.sendForm)(payload);\n          case 3:\n            modalForm.close();\n            modalPopup.open();\n            form.clear();\n            _context.next = 11;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context["catch"](0);\n            console.error(_context.t0);\n          case 11:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n    function onSubmit(_x) {\n      return _onSubmit.apply(this, arguments);\n    }\n    return onSubmit;\n  }()\n});\n\n//# sourceURL=webpack://digital-element/./src/js/main.js?')},"./src/js/modal.js":
/*!*************************!*\
  !*** ./src/js/modal.js ***!
  \*************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Modal: () => (/* binding */ Modal)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar Modal = /*#__PURE__*/function () {\n  function Modal(_ref) {\n    var modalId = _ref.modalId,\n      _ref$btnOpenId = _ref.btnOpenId,\n      btnOpenId = _ref$btnOpenId === void 0 ? false : _ref$btnOpenId;\n    _classCallCheck(this, Modal);\n    this.modalElem = document.getElementById(modalId);\n    this.buttonOpen = btnOpenId && document.getElementById(btnOpenId);\n    this.focusElements = ['a[href]', 'input', 'select', 'textarea', 'button', 'iframe', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n    this.isOpen = false;\n    this.previousActiveElement = false;\n    this.events();\n  }\n  _createClass(Modal, [{\n    key: \"events\",\n    value: function events() {\n      if (!this.modalElem) {\n        throw new Error('Элемент модального окна modal должен содержать id=modal');\n      }\n      this.modalContainer = this.modalElem.querySelector('#modalContainer');\n      this.modalBackdrop = this.modalElem.querySelector('#modalBackdrop');\n      this.buttonClose = this.modalElem.querySelector('#modalButtonClose');\n      if (!this.modalContainer) {\n        throw new Error('Элемент модального окна modalContainer должен содержать id=modalContainer');\n      }\n      if (!this.modalBackdrop) {\n        throw new Error('Элемент модального окна backdrop должен содержать id=modalBackdrop');\n      }\n      if (!this.buttonClose) {\n        throw new Error('Элемент модального окна buttonClose должен содержать id=modalButtonClose');\n      }\n      if (this.buttonOpen === null) {\n        throw new Error('Не удалось найти элемент по id переданному в btnOpenId');\n      }\n      if (this.buttonOpen) {\n        this.buttonOpen.addEventListener('click', this.open.bind(this));\n      }\n      this.buttonClose.addEventListener('click', this.close.bind(this));\n      this.modalBackdrop.addEventListener('click', this.close.bind(this));\n      window.addEventListener('keydown', this.keyBinding.bind(this));\n    }\n  }, {\n    key: \"keyBinding\",\n    value: function keyBinding(e) {\n      if (e.keyCode === 27 && this.isOpen) {\n        this.close();\n      }\n      if (e.which === 9 && this.isOpen) {\n        this.focusCatch(e);\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this = this;\n      this.previousActiveElement = document.activeElement;\n      this.modalElem.classList.add('is-open');\n      this.modalContainer.classList.add('fadeInUp');\n      this.modalContainer.classList.add('animate-open');\n      document.body.style.scrollBehavior = 'auto';\n      document.documentElement.style.scrollBehavior = 'auto';\n      this.disableScroll();\n      setTimeout(function () {\n        _this.isOpen = true;\n        _this.focusTrap();\n      }, 300);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.modalElem.classList.remove('is-open');\n      this.modalContainer.classList.remove('fadeInUp');\n      this.modalContainer.classList.remove('animate-open');\n      this.enableScroll();\n      this.isOpen = false;\n      this.focusTrap();\n    }\n  }, {\n    key: \"focusCatch\",\n    value: function focusCatch(e) {\n      var nodes = this.modalContainer.querySelectorAll(this.focusElements);\n      var nodesArray = Array.prototype.slice.call(nodes);\n      var focusedItemIndex = nodesArray.indexOf(document.activeElement);\n      if (e.shiftKey && focusedItemIndex === 0) {\n        nodesArray[nodesArray.length - 1].focus();\n        e.preventDefault();\n      }\n      if (!e.shiftKey && focusedItemIndex === nodesArray.length - 1) {\n        nodesArray[0].focus();\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"focusTrap\",\n    value: function focusTrap() {\n      var nodes = this.modalContainer.querySelectorAll(this.focusElements);\n      if (this.isOpen) {\n        if (nodes.length) nodes[0].focus();\n      } else if (this.previousActiveElement) {\n        this.previousActiveElement.focus();\n      }\n    }\n  }, {\n    key: \"disableScroll\",\n    value: function disableScroll() {\n      var pagePosition = window.scrollY;\n      this.lockPadding();\n      document.body.classList.add('disable-scroll');\n      document.body.dataset.position = pagePosition;\n      document.body.style.top = \"\".concat(-pagePosition, \"px\");\n    }\n  }, {\n    key: \"enableScroll\",\n    value: function enableScroll() {\n      var pagePosition = parseInt(document.body.dataset.position, 10);\n      this.unlockPadding();\n      document.body.style.top = 'auto';\n      document.body.classList.remove('disable-scroll');\n      window.scrollTo({\n        top: pagePosition,\n        left: 0\n      });\n      document.body.removeAttribute('data-position');\n    }\n  }, {\n    key: \"lockPadding\",\n    value: function lockPadding() {\n      var paddingOffset = \"\".concat(window.innerWidth - document.body.offsetWidth, \"px\");\n      document.body.style.paddingRight = paddingOffset;\n    }\n  }, {\n    key: \"unlockPadding\",\n    value: function unlockPadding() {\n      document.body.style.paddingRight = '0px';\n    }\n  }]);\n  return Modal;\n}();\n\n//# sourceURL=webpack://digital-element/./src/js/modal.js?")}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](r,r.exports,__webpack_require__),r.exports}__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/js/main.js")})();